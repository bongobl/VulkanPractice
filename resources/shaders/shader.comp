#version 450
#extension GL_ARB_separate_shader_objects: enable

#define		WORKGROUP_SIZE		32

layout(local_size_x = WORKGROUP_SIZE, local_size_y = WORKGROUP_SIZE, local_size_z = 1) in;


struct Vertex{
	vec3 position;
	float mass;
	vec3 normal;
	float padding0;
	vec2 texCoord;
	vec2 padding1;
	vec3 velocity;
	float padding2;
};

//descriptor bindings
layout(std140, binding = 0) buffer buf
{
	Vertex physicsBuffer[];
};

layout(std140, binding = 1) buffer buf2
{
	Vertex vertexBuffer[];
};

layout(std140, binding = 2) uniform UniformBufferObject
{
	vec3 netPosition;
	uint numParticles;

	vec3 padding;
	uint pitch;
	
	float deltaTime;
	float netMass;
	vec2 padding1;
}ubo;


//main
void main(){
	
	if(gl_GlobalInvocationID.x >= ubo.pitch || gl_GlobalInvocationID.y >= ubo.pitch){
		return;
	}

	uint xVal = gl_GlobalInvocationID.x;
	uint yVal = gl_GlobalInvocationID.y;

	uint indexVal = yVal * ubo.pitch + xVal;

	if(indexVal > ubo.numParticles){
		return;
	}


	vertexBuffer[indexVal] = physicsBuffer[indexVal];

	vertexBuffer[indexVal].position *= ubo.netPosition;
}